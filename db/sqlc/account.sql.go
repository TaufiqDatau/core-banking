// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: account.sql

package db

import (
	"context"
)

const createAccount = `-- name: CreateAccount :one
INSERT INTO accounts(
  owner,
  balance
) VALUES (
  $1, 
  $2
)
RETURNING id, owner, balance, created_at
`

type CreateAccountParams struct {
	Owner   string `json:"owner"`
	Balance string `json:"balance"`
}

func (q *Queries) CreateAccount(ctx context.Context, arg CreateAccountParams) (Account, error) {
	row := q.db.QueryRowContext(ctx, createAccount, arg.Owner, arg.Balance)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.Balance,
		&i.CreatedAt,
	)
	return i, err
}

const getAccountFromName = `-- name: GetAccountFromName :one
SELECT id, owner, balance, created_at FROM accounts 
WHERE owner= $1 
LIMIT 1
`

func (q *Queries) GetAccountFromName(ctx context.Context, owner string) (Account, error) {
	row := q.db.QueryRowContext(ctx, getAccountFromName, owner)
	var i Account
	err := row.Scan(
		&i.ID,
		&i.Owner,
		&i.Balance,
		&i.CreatedAt,
	)
	return i, err
}
